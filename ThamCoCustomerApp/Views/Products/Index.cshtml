@model IEnumerable<ProductViewModel>

@{
    ViewData["Title"] = "Products";
}
<link href="~/Stylesheet/bootstrap.css" rel="stylesheet" type="text/css" />
<link href="~/Stylesheet/site.css" rel="stylesheet" type="text/css" />

<div class="container mt-4">
    <h1 class="text-center mb-4">Products</h1>

    <form id="searchForm" class="mb-4">
        <div class="input-group">
            <input type="text" id="searchString" name="searchString" class="form-control" placeholder="Search for products..." value="@ViewData["CurrentFilter"]" />
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </div>
    </form>

    <div class="row" id="productContainer">
        <!-- Products will be loaded here via AJAX -->
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        // Load products immediately
        loadProducts();

        // Refresh products every 5 minutes (300,000 milliseconds)
        setInterval(loadProducts, 300000);

        // Handle search form submission
        $('#searchForm').submit(function (event) {
            event.preventDefault();
            loadProducts();
        });
    });

    function loadProducts() {
        var searchString = $('#searchString').val();
        $.ajax({
            url: '/Products/GetProducts',
            type: 'GET',
            data: { searchString: searchString },
            success: function (response) {
                var productContainer = $('#productContainer');

                // Clear the product container
                productContainer.empty();
                console.log("loading products")
                // Dynamically build product cards
                response.forEach(function (item) {
                    // create card
                    var card = $('<div>').addClass('col-md-4 mb-4');
                    // create card body
                    var cardBody = $('<div>').addClass('card h-100');
                    // create the image tag
                    var cardImage = $('<img>')
                        .attr('src', item.imageUrl)
                        .addClass('card-img-top')
                        .attr('alt', item.name);
                    // create card title
                    var cardTitle = $('<h5>')
                        .addClass('card-title')
                        .text(item.name);
                        // create card subtitle
                    var cardSubtitle = $('<h6>')
                        .addClass('card-subtitle mb-2 text-muted')
                        .text(item.brand);
                        // create card description
                    var cardDescription = $('<p>')
                        .addClass('card-text')
                        .text(item.description);
                        // create card price
                    var cardPrice = $('<p>')
                        .addClass('card-text')
                        .html('<strong>Price:</strong> ' + item.price.toLocaleString('en-US', { style: 'currency', currency: 'GBP' }));

                    // Append elements to the card
                    cardBody.append(cardImage, cardTitle, cardSubtitle, cardDescription, cardPrice);

                    // Conditionally render stock level for authenticated users
                @if (User.Identity.IsAuthenticated)
                {
                    @:var cardStockLevel = $('<p>')
                    @:.addClass('card-text')
                    @:.html('<strong>Stock Level:</strong> ' + item.stockLevel);
                    @:cardBody.append(cardStockLevel);
                }

                        var viewDetailsLink = $('<a>')
                        .addClass('btn btn-primary')
                        .attr('href', '/Products/Details/' + item.productId)
                        .text('View Details');

                    cardBody.append(viewDetailsLink);
                    card.append(cardBody);
                    productContainer.append(card);
                });
            },
            error: function (xhr, status, error) {
                console.log('Error loading products:', error);
            }
        });
    }
</script>
