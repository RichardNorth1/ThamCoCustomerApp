@model IEnumerable<ProductViewModel>

@{
    ViewData["Title"] = "Products";
}
<link href="~/Stylesheet/bootstrap.css" rel="stylesheet" type="text/css" />
<link href="~/Stylesheet/site.css" rel="stylesheet" type="text/css" />

<div class="container mt-4">
    <h1 class="text-center mb-4">Products</h1>

    <form method="get" asp-action="Index" class="mb-4">
        <div class="input-group">
            <input type="text" name="searchString" class="form-control" placeholder="Search for products..." value="@ViewData["CurrentFilter"]" />
            <div class="input-group-append">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </div>
    </form>

    <div class="row" id="productContainer">
        
    </div>

</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        // Load products immediately
        loadProducts();

        // Refresh products every 5 minutes (300,000 milliseconds)
        setInterval(loadProducts, 300000);
    });

    function loadProducts() {
        $.ajax({
            url: '/Products/GetProducts',
            type: 'GET',
            success: function (response) {
                var productContainer = $('#productContainer');

                // Parse response if it's a string
                if (typeof response === "string") {
                    response = JSON.parse(response);
                }

                // Clear the product container
                productContainer.empty();

                // Log the refresh action
                console.log('Loading products...');

                // Dynamically build product cards
                response.forEach(function (item) {
                    console.log('Processing item:', item); // Debugging

                    // Create card structure
                    var card = $('<div>').addClass('col-md-4 mb-4');
                    var cardBody = $('<div>').addClass('card h-100');
                    var cardImage = $('<img>')
                        .attr('src', item.ImageUrl || item.imageUrl)
                        .addClass('card-img-top')
                        .attr('alt', item.Name || item.name);
                    var cardTitle = $('<h5>')
                        .addClass('card-title')
                        .text(item.Name || item.name);
                    var cardSubtitle = $('<h6>')
                        .addClass('card-subtitle mb-2 text-muted')
                        .text(item.Brand || item.brand);
                    var cardDescription = $('<p>')
                        .addClass('card-text')
                        .text(item.Description || item.description);
                    var cardPrice = $('<p>')
                        .addClass('card-text')
                        .html('<strong>Price:</strong> ' +
                            (item.Price !== undefined && item.Price !== null
                                ? item.Price.toLocaleString('en-US', { style: 'currency', currency: 'GBP' })
                                : (item.price !== undefined && item.price !== null
                                    ? item.price.toLocaleString('en-US', { style: 'currency', currency: 'GBP' })
                                    : 'N/A')));
                    var cardStockLevel = $('<p>')
                        .addClass('card-text')
                        .html('<strong>Stock Level:</strong> ' + (item.StockLevel || item.stockLevel));
                    var viewDetailsLink = $('<a>')
                        .addClass('btn btn-primary')
                        .attr('href', '/Products/Details/' + (item.ProductId || item.productId))
                        .text('View Details');

                    // Append elements to the card
                    cardBody.append(cardImage, cardTitle, cardSubtitle, cardDescription, cardPrice, cardStockLevel, viewDetailsLink);
                    card.append(cardBody);
                    productContainer.append(card);
                });
            },
            error: function (xhr, status, error) {
                console.log('Error loading products:', error);
            }
        });
    }
</script>



